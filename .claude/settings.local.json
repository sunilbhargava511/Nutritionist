{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(touch:*)",
      "Bash(npm install:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(npm run:*)",
      "Bash(curl:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(sqlite3:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(chmod:*)",
      "Bash(FLYIO/scripts/setup-fly.sh)",
      "Bash(FLYIO/setup.sh)",
      "Bash(cp:*)",
      "Bash(fly logs:*)",
      "Bash(fly ssh console:*)",
      "Bash(fly machine restart:*)",
      "Bash(fly secrets:*)",
      "Bash(fly status:*)",
      "Bash(fly machine list:*)",
      "Bash(fly auth:*)",
      "Bash(fly apps:*)",
      "Bash(fly launch:*)",
      "Bash(fly deploy:*)",
      "WebSearch",
      "WebFetch(domain:platform.openai.com)",
      "Bash(git commit:*)",
      "Bash(npx tsc:*)",
      "Bash(git push:*)",
      "Bash(git tag:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:thegoldenpath.fly.dev)",
      "Bash(cat:*)",
      "Bash(fly machine destroy:*)",
      "Bash(fly machines list:*)",
      "Bash(fly machine update:*)",
      "Bash(gh auth:*)",
      "Bash(railway status:*)",
      "Bash(railway logs:*)",
      "Bash(railway variables:*)",
      "Bash(railway run:*)",
      "Bash(git init:*)",
      "Bash(node server.js)",
      "Bash(railway link:*)",
      "Bash(railway login:*)",
      "Bash(railway projects:*)",
      "Bash(railway up:*)",
      "Bash(ELEVENLABS_API_KEY=test_key ELEVENLABS_AGENT_ID=test_agent HOSTNAME=0.0.0.0 PORT=3001 node server.js)",
      "Bash(ELEVENLABS_API_KEY=test_key ELEVENLABS_AGENT_ID=test_agent HOSTNAME=0.0.0.0 PORT=3002 node server.js)",
      "Bash(DATABASE_PATH=\"./test-database.sqlite\" ELEVENLABS_API_KEY=test_key ELEVENLABS_AGENT_ID=test_agent HOSTNAME=0.0.0.0 PORT=3003 node server.js)",
      "Bash(NODE_ENV=production DATABASE_PATH=\"./test-database.sqlite\" HOSTNAME=0.0.0.0 PORT=3004 node server-production.js)",
      "Bash(NODE_ENV=production DATABASE_PATH=\"./test-database.sqlite\" HOSTNAME=0.0.0.0 PORT=3004 node .next/standalone/server.js)",
      "Bash(NODE_ENV=production DATABASE_PATH=\"./test-database.sqlite\" HOSTNAME=0.0.0.0 PORT=3005 node .next/standalone/server.js)",
      "Bash(find:*)",
      "WebFetch(domain:api.github.com)",
      "Bash(railway domain:*)",
      "Bash(node:*)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm start)",
      "Bash(PORT=3003 npm start)",
      "Bash(DATABASE_PATH=\"./database.sqlite\" node -e \"\nconst Database = require(''better-sqlite3'');\nconst db = new Database(''./database.sqlite'');\n\nconsole.log(''Checking database tables...'');\nconst tables = db.prepare(''SELECT name FROM sqlite_master WHERE type=\\''table\\'''').all();\nconsole.log(''Existing tables:'', tables.map(t => t.name));\n\n// Check specific tables we need\nconst requiredTables = [''service_summary'', ''service_provider'', ''admin_settings'', ''conversation_style''];\nconst existingTables = tables.map(t => t.name);\n\nconsole.log(''\\nTable status:'');\nrequiredTables.forEach(table => {\n  console.log(table + '':'', existingTables.includes(table) ? ''✅'' : ''❌'');\n});\n\ndb.close();\n\")",
      "Bash(railway deploy:*)",
      "Bash(DATABASE_PATH=\"./database.sqlite\" node -e \"\nconst Database = require(''better-sqlite3'');\nconst db = new Database(''./database.sqlite'');\n\nconsole.log(''Current admin settings:'');\nconst settings = db.prepare(''SELECT * FROM admin_settings'').all();\nsettings.forEach(setting => {\n  console.log(''ID:'', setting.id);\n  console.log(''Voice ID:'', setting.voice_id);\n  console.log(''Voice Description:'', setting.voice_description);\n  console.log(''Updated At:'', setting.updated_at);\n  console.log(''---'');\n});\n\ndb.close();\n\")",
      "Bash(DATABASE_PATH=\"./database.sqlite\" node:*)",
      "Bash(railway shell:*)"
    ],
    "deny": [],
    "additionalDirectories": [
      "/private/tmp",
      "/Users/sunilbhargava"
    ]
  }
}